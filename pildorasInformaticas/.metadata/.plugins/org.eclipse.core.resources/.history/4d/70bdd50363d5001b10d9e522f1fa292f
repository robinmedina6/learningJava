package com.post.co;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class ConnectionFactory {
	private double API_VERSION=0;
	private String API="";
	private String METHOD ="POST";
	private String TYPE = "appplication/x-www-form-urlencoded";
	private String USER_AGENT = "Mozilla/5.0";
	private String data ="";
	private URL connection ;
	private HttpURLConnection finalConnection;
	
	private HashMap<String,String> fields = new HashMap<String, String>();
	
	public ConnectionFactory(String[] endpoint,String url , double version) {
		this.API_VERSION = version;
		this.API = url;
		fields.put("version",String.valueOf(version));
		
		for (int i = 0 ;i<endpoint.length;i++) {
			String[] points = endpoint[i].split(";");
			for(int f=0; f<points.length;f++) {
				fields.put(points[f].split(":")[0],points[f].split(":")[1]);
			}
			
		}
		
	}
	public String buildConnection() {
		StringBuilder content = new StringBuilder();
		if (!this.getEndPoints().equalsIgnoreCase("") && !this.getEndPoints().isEmpty()) {
			String vars ="";
			String vals= "";
			try {
				for(Map.Entry<String, String> entry : fields.entrySet()) {
					vars = entry.getKey();
					vals = entry.getValue();
					data +=("&"+vars+"="+vals);
				}
				if(data.startsWith("&")) {
					data = data.replaceFirst("&", "");
				}
				connection = new URL(API);
				BufferedReader reader = new BufferedReader(new InputStreamReader(readWhitAcces(connection, data)));
				String line;
				while((line=reader.readLine())!= null) {
					content.append(line+"\n");
				}
				reader.close();
				return content.toString();
			} catch (Exception e) {
				System.err.println(e.getMessage()+"prb");
			}
		}else {
			return null;
		}
		return null;
		
	}
	private InputStream readWhitAcces(URL url , String data) {
		try {
			byte[]	out = data.toString().getBytes();	
			finalConnection= (HttpURLConnection) url.openConnection();
			finalConnection.setRequestMethod(METHOD);
			finalConnection.setDoOutput(true);
			finalConnection.addRequestProperty("user-Agent",USER_AGENT);
			finalConnection.addRequestProperty("content-Type", TYPE);
			finalConnection.connect();
			try {
				OutputStream os = finalConnection.getOutputStream();
				os.write(out);
			} catch (Exception e) {
				System.err.println(e.getMessage()+"recibido");
			}
			return finalConnection.getInputStream();
		} catch (Exception e) {
			System.err.println(e.getMessage()+"|config|");
			return null;
		}
	}
	
	public String getApiVersion() {
		return String.valueOf(API_VERSION);
	}
	public String getEndPoints() {
		return  fields.toString();
	}
	public String getEndpointvalue(String key) {
		return fields.get(key);		
	}
	public void setUserAgent(String useragent) {
		this.USER_AGENT=useragent;
	}
	public void setMetod(String method) {
		this.METHOD=method;
	}
	public void setSubmissionType(String type) {
		this.TYPE=type;
	}
	
	
}
